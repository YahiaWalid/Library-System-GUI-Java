/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarysystem;

/**
 *
 * @author Yahia
 */
import javax.swing.JOptionPane;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;  
import java.time.LocalDate;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import javafx.util.converter.LocalDateTimeStringConverter;


public class IssueBook extends javax.swing.JFrame {

    public boolean isInteger( String input ) { 
    try { 
        Integer.parseInt( input ); 
        return true;
    } 
    catch( Exception e ) {  
        return false; 
    } 
    }
    
    
    
    public boolean isLong( String input ) {
    try {
        Long.parseLong(input ); 
        return true; 
    } 
    catch( Exception e ) {  
        return false; 
    }
    }
    
    
    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        issueBookButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        bookCallNoTextField = new javax.swing.JTextField();
        studentIDtextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        studentNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        studentContactTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Issue Book");

        jLabel2.setText("Book Call No:");

        issueBookButton.setText("Issue");
        issueBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBookButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Student ID:");

        studentNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Student Name:");

        jLabel5.setText("Student Contact:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jLabel1)
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(104, 104, 104))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(studentIDtextField)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(issueBookButton, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(bookCallNoTextField)
                            .addComponent(studentContactTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(110, 110, 110))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookCallNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentContactTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(issueBookButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void issueBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBookButtonActionPerformed

        LocalDate today = LocalDate.now();
 
   
        String formattedDate = today.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
 try{
        
        Date d= new SimpleDateFormat("dd/MM/yyyy").parse(formattedDate);
 
       
//        try{
//        d = new SimpleDateFormat("dd/MM/yyyy").parse(formattedDate);
//        }
//        catch(ParseException p){
//            System.out.println("Date parse format is not the same as the local date declared !");
//        }
        StudentFileReader.StudentList.clear();
        StudentFileReader sreader = new StudentFileReader();
        sreader.readStudents();
        
        BookFileReader b = new BookFileReader();
        BookFileReader.BookList.clear();
        b.readBooks();
        
        BookFileWriter brtr = new BookFileWriter();
        
       // IssuedBookFileReader ib = new IssuedBookFileReader();
      //  ib.readBooks();
        
        IssueBookFileWriter irtr = new IssueBookFileWriter();
        
        IssuedBook ibook = new IssuedBook();
        
        int i;
        
     if(studentNameTextField.getText().equals("") || bookCallNoTextField.getText().equals("") || studentIDtextField.getText().equals("") || studentContactTextField.getText().equals(""))
         JOptionPane.showMessageDialog(null,"All fields must be filled !" ,"Warning",JOptionPane.WARNING_MESSAGE);
     else if(!isInteger(studentIDtextField.getText()))
         JOptionPane.showMessageDialog(null,"Student ID must be a number !" ,"Warning",JOptionPane.WARNING_MESSAGE);
     else if(!isLong(studentContactTextField.getText()))
         JOptionPane.showMessageDialog(null,"Student Contact number must be a number !" ,"Warning",JOptionPane.WARNING_MESSAGE);
     
     else{ 
         int j;
         for(j=0;j<StudentFileReader.StudentList.size();j++){
         
         if(StudentFileReader.StudentList.get(j).getContactNumber().equals(studentContactTextField.getText()) 
                 && StudentFileReader.StudentList.get(j).getId() == Integer.parseInt(studentIDtextField.getText())
                 && StudentFileReader.StudentList.get(j).getName().equals(studentNameTextField.getText()))
             break;
             
         }
         
         if(j==StudentFileReader.StudentList.size()){
             JOptionPane.showMessageDialog(null,"Student ID , ID or contact number doesn't match !" ,"Warning",JOptionPane.WARNING_MESSAGE);
             return;
         }
         
         
         
         
         
         
         
           for(i=0;i<BookFileReader.BookList.size();i++){
           
           
// big if cond
           if(BookFileReader.BookList.get(i).getCallNo().equals(bookCallNoTextField.getText())){
                  
               if(BookFileReader.BookList.get(i).getQuantity()== 0){
                  JOptionPane.showMessageDialog(null,"All Books having the given book call number are issued !" ,"Warning",JOptionPane.WARNING_MESSAGE);
               return;
               }
               else{
                     ibook.setBookCallNo(BookFileReader.BookList.get(i).getCallNo());
                     ibook.setStudentName(studentNameTextField.getText());
                     ibook.setStudentId(Integer.parseInt(studentIDtextField.getText()));
                     ibook.setStudentContactNumber(studentContactTextField.getText());
                     ibook.setIssueDate(d);
                     irtr.addOneBook(ibook);
                     BookFileReader.BookList.get(i).decQuantity(1);
                     
                      //BookFileReader.BookList.remove(i);
                      brtr.rewriteBooks();
                      JOptionPane.showMessageDialog(null,"Book issued successfully !" ,"Message",JOptionPane.INFORMATION_MESSAGE);
                      
                      return;
                  }
                 
               
           }
 //end of big if cond
           
       
       
       
       
       
     } 
      
     if(i == BookFileReader.BookList.size())
           JOptionPane.showMessageDialog(null,"Book doesnt exist !" ,"Warning",JOptionPane.WARNING_MESSAGE);
     } 
    
 }
     catch(ParseException p){
           System.out.println("ERROR");
    }//GEN-LAST:event_issueBookButtonActionPerformed
 }
    
    
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        
        LibrarianSection l = new LibrarianSection();
        l.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void studentNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField bookCallNoTextField;
    private javax.swing.JButton issueBookButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField studentContactTextField;
    private javax.swing.JTextField studentIDtextField;
    private javax.swing.JTextField studentNameTextField;
    // End of variables declaration//GEN-END:variables
}
